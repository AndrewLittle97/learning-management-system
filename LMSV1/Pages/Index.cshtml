@page
@model IndexModel
@using Microsoft.AspNetCore.Identity
@using LMSV1.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Dashboard";
}

@if (SignInManager.IsSignedIn(User))
{
<!-- I'm not sure what this line was supposed to do but I commented it out for now -Quinn <<<<<<< HEAD-->
    <!--New Approach to creating the cards, this way you can click the course elements to get a small dropdown of the information-->
    <!--Refresh button to see if any information on the courses page has changed-->
<!--=======-->
    <div class="grid-container">
        <div class="dashboard-section">
            <!--New Approach to creating the cards, this way you can click the course elements to get a small dropdown of the information-->
            <h1>Dashboard</h1>
            <hr />
            <!--Refresh button to see if any information on the courses page has changed-->
            <p><a asp-page="Index">Refresh</a></p>
            @foreach (var item in Model.Course)
            {
                <!--This is the information displayed insdie the card-->
                <!--Need to figure out how to send the clickable card to the appropriate page... Change the a href="Something else here"-->
                                <a asp-page="/Instructor/Crs/Index" asp-route-id="@item.CourseID" style="text-decoration:none; color:inherit;">
                    <div class="card-container">
                        <div class="card">
                            <p>@Html.DisplayFor(modelItem => item.Title)</p>             
                            <p>@Html.DisplayFor(modelItem => item.CourseID)</p>             
                            <p>@Html.DisplayFor(modelItem => item.Credits) Credits</p>             
                            <p>@Html.DisplayFor(modelItem => item.Location)</p>               
                            <p>@Html.DisplayFor(modelItem => item.MeetDays)</p>               
                            <p>@Html.DisplayFor(modelItem => item.StartTime) - @Html.DisplayFor(modelItem => item.EndTime)</p>
                        </div>
                    </div>
                </a>
            }
        </div>

        <!-- To Do Section -->
        <div class="to-do-section">
            <h4>To Do</h4>
            <hr />
            <div class="list-group">
                <a href="#" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">CS 3750</h5>
                    </div>
                    <p class="mb-1">Assignment 1</p>
                    <small>Oct 2 at 11:59pm</small>
                </a>
                <a href="#" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">CS 3750</h5>
                    </div>
                    <p class="mb-1">Assignment 2</p>
                    <small>Oct 10 at 11:59pm</small>
                </a>
                <a href="#" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">CS 3750</h5>
                    </div>
                    <p class="mb-1">Assignment 3</p>
                    <small>Oct 20 at 11:59pm</small>
                </a>
<!--I'm not sure what this line wa supposed to do so I comment it out for now -Quinn' 61b8c344e27182b88766eaa51bdbed14e5a09958-->
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Login or Create a new account</p>
    </div>
}