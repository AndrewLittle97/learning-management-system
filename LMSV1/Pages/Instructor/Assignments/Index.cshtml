@page
@model LMSV1.Pages.Instructor.Assignments.IndexModel
@using Microsoft.AspNetCore.Identity
@using LMSV1.Models

@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Course Details";
    var user = await UserManager.GetUserAsync(User);
}
<h1>@Model.Course.DepartmentID @Model.Course.CourseID</h1>
<h2>@Model.Course.Title</h2>
<p>
   <b>Location:</b> @Model.Course.Location <br />
   <b>Meet days:</b> @Model.Course.MeetDays <br />
   <b>Time:</b> @Model.Course.StartTime - @Model.Course.EndTime <br />
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Course.Assignments.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course.Assignments.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course.Assignments.First().MaxPoints)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course.Assignments.First().DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course.Assignments.First().CourseID)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Course.Assignments) 
        {
            <tr>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.AssignmentID">
                    @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxPoints)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseID)
                </td>
                <td>
                    @if (await UserManager.IsInRoleAsync(user, "Instructor"))
                    {
                        <a asp-page="./Edit" asp-route-id="@item.AssignmentID">Edit </a> 
                    }
                    | <a asp-page="./Details" asp-route-id="@item.AssignmentID">Details</a> |
                    @if (await UserManager.IsInRoleAsync(user, "Instructor"))
                    {
                        <a asp-page="./Delete" asp-route-id="@item.AssignmentID">Delete</a>
                    }
                </td>
            </tr>
        }
          
    </tbody>
</table>
@if (await UserManager.IsInRoleAsync(user, "Instructor"))
{
    <p><a asp-page="Create" asp-route-id="@Model.Course.CourseID">Create new assignment</a></p>
    <a asp-page="../CourseManager">Back to Courses</a>
}

@if (await UserManager.IsInRoleAsync(user, "Student"))
{
    <a asp-page="/Index">Back to Dashboard</a>
}